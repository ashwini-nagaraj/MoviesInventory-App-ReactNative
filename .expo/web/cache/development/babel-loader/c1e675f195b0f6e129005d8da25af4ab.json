{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport { getMovieDetails } from \"./apis/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({\n    placeholder: \"Enter a movie...\",\n    results: [],\n    selected: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function fetchMovieDetails() {\n    var _await$getMovieDetail, data, results;\n\n    return _regeneratorRuntime.async(function fetchMovieDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getMovieDetails(state.placeholder));\n\n          case 2:\n            _await$getMovieDetail = _context.sent;\n            data = _await$getMovieDetail.data;\n            results = data.Search;\n            setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                results: results\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Movies Inventory\"\n    }), _jsx(TextInput, {\n      style: styles.searchBox,\n      value: state.placeholder,\n      onChangeText: function onChangeText(text) {\n        return setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            placeholder: text\n          });\n        });\n      },\n      onSubmitEditing: fetchMovieDetails\n    }), _jsx(ScrollView, {\n      styles: styles.scrollGrid\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  title: {\n    color: '#FFF',\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: '500'\n  },\n  searchBox: {\n    width: '50%',\n    fontSize: 20,\n    padding: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 8,\n    marginBottom: 40\n  },\n  scrollGrid: {}\n});","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/App.js"],"names":["React","useState","getMovieDetails","App","placeholder","results","selected","state","setState","fetchMovieDetails","data","Search","prevState","styles","container","title","searchBox","text","scrollGrid","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","paddingHorizontal","color","fontSize","marginBottom","fontWeight","width","padding","borderRadius"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,eAAT;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0BF,QAAQ,CAAC;AACjCG,IAAAA,WAAW,EAAC,kBADqB;AAEjCC,IAAAA,OAAO,EAAC,EAFyB;AAGjCC,IAAAA,QAAQ,EAAC;AAHwB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,WAAeC,iBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBP,eAAe,CAACK,KAAK,CAACH,WAAP,CADxC;;AAAA;AAAA;AACUM,YAAAA,IADV,yBACUA,IADV;AAEML,YAAAA,OAFN,GAEgBK,IAAI,CAACC,MAFrB;AAGEH,YAAAA,QAAQ,CAAC,UAAAI,SAAS,EAAI;AACpB,qDAAWA,SAAX;AAAsBP,gBAAAA,OAAO,EAACA;AAA9B;AACD,aAFO,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,KAAC,SAAD;AACA,MAAA,KAAK,EAAEF,MAAM,CAACG,SADd;AAEA,MAAA,KAAK,EAAGT,KAAK,CAACH,WAFd;AAGA,MAAA,YAAY,EAAE,sBAAAa,IAAI;AAAA,eAAGT,QAAQ,CAAC,UAAAI,SAAS,EAAI;AACzC,iDAAWA,SAAX;AAAsBR,YAAAA,WAAW,EAACa;AAAlC;AACD,SAF4B,CAAX;AAAA,OAHlB;AAMA,MAAA,eAAe,EAAER;AANjB,MAFF,EAUE,KAAC,UAAD;AAAY,MAAA,MAAM,EAAEI,MAAM,CAACK;AAA3B,MAVF;AAAA,IADF;AAcD;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,YAJP;AAKTC,IAAAA,UAAU,EAAE,EALH;AAMTC,IAAAA,iBAAiB,EAAE;AANV,GADoB;AAS/BX,EAAAA,KAAK,EAAC;AACJY,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,YAAY,EAAC,EAHT;AAIJC,IAAAA,UAAU,EAAE;AAJR,GATyB;AAe/Bd,EAAAA,SAAS,EAAC;AACRe,IAAAA,KAAK,EAAE,KADC;AAERH,IAAAA,QAAQ,EAAE,EAFF;AAGRI,IAAAA,OAAO,EAAE,EAHD;AAIRV,IAAAA,eAAe,EAAE,MAJT;AAKRW,IAAAA,YAAY,EAAE,CALN;AAMRJ,IAAAA,YAAY,EAAE;AANN,GAfqB;AAuB/BX,EAAAA,UAAU,EAAC;AAvBoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, TextInput, ScrollView } from 'react-native';\nimport React, {useState} from 'react';\nimport { getMovieDetails } from './apis/api';\n\nexport default function App() {\n  const [state, setState] = useState({\n    placeholder:\"Enter a movie...\",\n    results:[],\n    selected:{}\n  });\n\n  async function fetchMovieDetails() {\n    const { data } = await getMovieDetails(state.placeholder);\n    let results = data.Search;\n    setState(prevState => {\n      return {...prevState, results:results}\n    });\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Movies Inventory</Text>\n      <TextInput \n      style={styles.searchBox}\n      value= {state.placeholder}\n      onChangeText={text=> setState(prevState => {\n        return {...prevState, placeholder:text}\n      })}\n      onSubmitEditing={fetchMovieDetails}\n      />\n      <ScrollView styles={styles.scrollGrid}></ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  title:{\n    color: '#FFF',\n    fontSize: 24,\n    marginBottom:20,\n    fontWeight: '500'\n  },\n  searchBox:{\n    width: '50%',\n    fontSize: 20,\n    padding: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 8,\n    marginBottom: 40\n  },\n  scrollGrid:{\n    \n  }\n});\n"]},"metadata":{},"sourceType":"module"}