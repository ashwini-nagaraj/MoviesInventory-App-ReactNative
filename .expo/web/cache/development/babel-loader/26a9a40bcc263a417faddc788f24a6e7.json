{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport React, { useState } from 'react';\nimport { getMovies, getMovieDetails } from \"./apis/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({\n    placeholder: \"Enter a movie...\",\n    results: [],\n    selected: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function fetchMovieDetails(paramMovieName) {\n    var _await$getMovies, data, results;\n\n    return _regeneratorRuntime.async(function fetchMovieDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getMovies(paramMovieName));\n\n          case 2:\n            _await$getMovies = _context.sent;\n            data = _await$getMovies.data;\n            results = data.Search;\n            setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                results: results\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function openModal(id) {\n    var _await$getMovieDetail, data, result;\n\n    return _regeneratorRuntime.async(function openModal$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getMovieDetails(id));\n\n          case 2:\n            _await$getMovieDetail = _context2.sent;\n            data = _await$getMovieDetail.data;\n            result = data;\n            setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                selected: result\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Movies Inventory\"\n    }), _jsx(TextInput, {\n      style: styles.searchBox,\n      value: state.placeholder,\n      onChangeText: function onChangeText(text) {\n        return setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            placeholder: text\n          });\n        });\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        return fetchMovieDetails(state.placeholder);\n      }\n    }), _jsx(ScrollView, {\n      style: styles.scrollGrids,\n      children: state.results.map(function (result) {\n        return _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return openModal(result.imdbID);\n          },\n          children: _jsxs(View, {\n            style: styles.scrollGrid,\n            children: [_jsx(Image, {\n              source: {\n                uri: result.Poster\n              },\n              style: {\n                width: '100%',\n                marginHorizontal: 'auto',\n                height: 300\n              },\n              resizeMode: \"cover\"\n            }), _jsx(Text, {\n              style: styles.heading,\n              children: result.Title\n            })]\n          })\n        }, result.imdbID);\n      })\n    }), _jsx(Modal, {\n      animationType: \"fade\",\n      transparent: false,\n      visible: typeof state.selected.Title != \"undefined\" ? true : false,\n      children: _jsx(View, {\n        style: styles.modal,\n        children: _jsx(Text, {\n          style: styles.modalText,\n          children: state.selected.Title\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  title: {\n    color: '#FFF',\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: '500'\n  },\n  searchBox: {\n    width: '50%',\n    fontSize: 20,\n    padding: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 8,\n    marginBottom: 40\n  },\n  scrollGrids: {\n    flex: 1\n  },\n  scrollGrid: {\n    flex: 1,\n    width: \"100%\",\n    marginBottom: 20\n  },\n  heading: {\n    color: '#FFF',\n    fontSize: 18,\n    fontWeight: 700,\n    padding: 20,\n    backgroundColor: '#445565'\n  }\n});","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/App.js"],"names":["React","useState","getMovies","getMovieDetails","App","placeholder","results","selected","state","setState","fetchMovieDetails","paramMovieName","data","Search","prevState","openModal","id","result","styles","container","title","searchBox","text","scrollGrids","map","imdbID","scrollGrid","uri","Poster","width","marginHorizontal","height","heading","Title","modal","modalText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","paddingHorizontal","color","fontSize","marginBottom","fontWeight","padding","borderRadius"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput,ScrollView, Image, TouchableHighlight, Modal} from 'react-native';\nimport React, {useState} from 'react';\nimport { getMovies, getMovieDetails } from './apis/api';\n\nexport default function App() {\n  const [state, setState] = useState({\n    placeholder:\"Enter a movie...\",\n    results:[],\n    selected:{}\n  });\n\n  async function fetchMovieDetails(paramMovieName) {\n    const { data } = await getMovies(paramMovieName);\n    let results = data.Search;\n    setState(prevState => {\n      return {...prevState, results:results}\n    });\n  }\n\n  async function openModal(id){\n    const { data } = await getMovieDetails(id);\n    let result = data;\n    setState(prevState => {\n      return {...prevState, selected:result}\n    });\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Movies Inventory</Text>\n      <TextInput \n      style={styles.searchBox}\n      value= {state.placeholder}\n      onChangeText={text=> setState(prevState => {\n        return {...prevState, placeholder:text}\n      })}\n      onSubmitEditing={()=>fetchMovieDetails(state.placeholder)}\n      />\n        <ScrollView style={styles.scrollGrids}>\n        {state.results.map(result=>  (\n          <TouchableHighlight key={result.imdbID}  onPress={()=>openModal(result.imdbID)}>\n          <View style={styles.scrollGrid}>\n            <Image \n             source={{uri: result.Poster}}\n             style={{\n               width:'100%',\n               marginHorizontal:'auto',\n               height:300,\n             }}\n             resizeMode='cover'\n             />\n            <Text style={styles.heading}>{result.Title}</Text>\n          </View>\n          </TouchableHighlight>    \n          )\n        )}\n      </ScrollView>\n      <Modal \n      animationType='fade'\n      transparent={false}\n      visible={(typeof state.selected.Title!=\"undefined\")? true: false}\n      >\n        <View style={styles.modal}>\n        <Text style={styles.modalText}>{state.selected.Title}</Text>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  title:{\n    color: '#FFF',\n    fontSize: 24,\n    marginBottom:20,\n    fontWeight: '500'\n  },\n  searchBox:{\n    width: '50%',\n    fontSize: 20,\n    padding: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 8,\n    marginBottom: 40\n  },\n  scrollGrids:{\n    flex: 1,\n  },\n  scrollGrid:{\n    flex: 1,\n    width:\"100%\",\n    marginBottom:20\n  },\n  heading:{\n    color: '#FFF',\n    fontSize: 18,\n    fontWeight:700,\n    padding: 20,\n    backgroundColor: '#445565'\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}