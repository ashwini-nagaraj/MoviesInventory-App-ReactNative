{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar BASE_URL_ENDPOINT = \"http://www.omdbapi.com/?apikey=5fb20880\";\nexport function getMovieDetails(movieName) {\n  var response;\n  return _regeneratorRuntime.async(function getMovieDetails$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          response = axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName);\n          return _context.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\naxios(BASE_URL_ENDPOINT + \"&s=\" + state.placeholder).then(function (_ref) {\n  var data = _ref.data;\n  var results = data.Search;\n  console.log(results);\n  setState(function (prevState) {\n    return _objectSpread(_objectSpread({}, prevState), {}, {\n      results: results\n    });\n  });\n});","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/apis/api.js"],"names":["axios","BASE_URL_ENDPOINT","getMovieDetails","movieName","response","get","state","placeholder","then","data","results","Search","console","log","setState","prevState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,iBAAiB,GAAG,yCAA1B;AAEA,OAAQ,SAAeC,eAAf,CAA+BC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,UAAAA,QADA,GACYJ,KAAK,CAACK,GAAN,CAAaJ,iBAAb,WAAoCE,SAApC,CADZ;AAAA,2CAECC,QAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAORJ,KAAK,CAACC,iBAAiB,GAAC,KAAlB,GAAwBK,KAAK,CAACC,WAA/B,CAAL,CAAiDC,IAAjD,CAAsD,gBAAU;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC5D,MAAIC,OAAO,GAAID,IAAI,CAACE,MAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAI,EAAAA,QAAQ,CAAC,UAAAC,SAAS,EAAI;AACpB,2CAAWA,SAAX;AAAsBL,MAAAA,OAAO,EAACA;AAA9B;AACD,GAFO,CAAR;AAGD,CANH","sourcesContent":["import axios from \"axios\";\n\n\nconst BASE_URL_ENDPOINT = \"http://www.omdbapi.com/?apikey=5fb20880\";\n\nexport  async function getMovieDetails(movieName) {\n  const response =  axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}`);\n  return response;\n}\n\n\n\naxios(BASE_URL_ENDPOINT+\"&s=\"+state.placeholder).then(({data})=>{\n    let results =  data.Search;\n    console.log(results);\n    setState(prevState => {\n      return {...prevState, results:results}\n    });\n  })\n\n"]},"metadata":{},"sourceType":"module"}