{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar BASE_URL_ENDPOINT = \"https://www.omdbapi.com/?apikey=5fb20880\";\nexport function getMovies(movieName) {\n  var movies;\n  return _regeneratorRuntime.async(function getMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName));\n\n        case 2:\n          movies = _context.sent;\n          return _context.abrupt(\"return\", movies);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovieDetails(movieID) {\n  var movieDetails;\n  return _regeneratorRuntime.async(function getMovieDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&i=\" + movieID));\n\n        case 2:\n          movieDetails = _context2.sent;\n          return _context2.abrupt(\"return\", movieDetails);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovie(movieName) {\n  var page, result, moviesList, res;\n  return _regeneratorRuntime.async(function getMovie$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          page = 1;\n          result = {};\n          moviesList = [];\n\n        case 3:\n          if (!(page <= 5)) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName + \"&page=\" + page));\n\n        case 6:\n          res = _context3.sent;\n          result = res.data;\n          result.map(function (movies) {\n            return moviesList.push(movies);\n          });\n          page++;\n          _context3.next = 3;\n          break;\n\n        case 12:\n          return _context3.abrupt(\"return\", moviesList);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/apis/api.js"],"names":["axios","BASE_URL_ENDPOINT","getMovies","movieName","get","movies","getMovieDetails","movieID","movieDetails","getMovie","page","result","moviesList","res","data","map","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAG,yCAA1B;AAEA,OAAQ,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CAACI,GAAN,CAAaH,iBAAb,WAAoCE,SAApC,CADf;;AAAA;AACAE,UAAAA,MADA;AAAA,2CAECA,MAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKR,OAAQ,SAAeC,eAAf,CAA+BC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACuBP,KAAK,CAACI,GAAN,CAAaH,iBAAb,WAAoCM,OAApC,CADvB;;AAAA;AACEC,UAAAA,YADF;AAAA,4CAEGA,YAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKR,OAAQ,SAAeC,QAAf,CAAwBN,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFO,UAAAA,IADE,GACG,CADH;AAEFC,UAAAA,MAFE,GAEO,EAFP;AAGAC,UAAAA,UAHA,GAGa,EAHb;;AAAA;AAAA,gBAIEF,IAAI,IAAI,CAJV;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAKiBV,KAAK,CAACI,GAAN,CAAaH,iBAAb,WAAoCE,SAApC,cAAsDO,IAAtD,CALjB;;AAAA;AAKKG,UAAAA,GALL;AAMDF,UAAAA,MAAM,GAAGE,GAAG,CAACC,IAAb;AACAH,UAAAA,MAAM,CAACI,GAAP,CAAW,UAAAV,MAAM;AAAA,mBAAIO,UAAU,CAACI,IAAX,CAAgBX,MAAhB,CAAJ;AAAA,WAAjB;AACAK,UAAAA,IAAI;AARH;AAAA;;AAAA;AAAA,4CAUDE,UAVC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL_ENDPOINT = \"https://www.omdbapi.com/?apikey=5fb20880\";\n\nexport  async function getMovies(movieName) {\n  const movies = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}`);\n  return movies;\n}\n\nexport  async function getMovieDetails(movieID) {\n    const movieDetails = await axios.get(`${BASE_URL_ENDPOINT}&i=${movieID}`);\n    return movieDetails;\n}\n\nexport  async function getMovie(movieName) {\n  let page=1;\n  let result = {}\n  const moviesList = [];\n   while (page <= 5)\n     { const res = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}&page=${page}`);\n       result = res.data;\n       result.map(movies => moviesList.push(movies))\n       page++;\n    }\nreturn moviesList;\n}\n\n"]},"metadata":{},"sourceType":"module"}