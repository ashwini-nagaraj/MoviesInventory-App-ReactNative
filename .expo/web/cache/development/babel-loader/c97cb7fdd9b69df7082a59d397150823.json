{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar BASE_URL_ENDPOINT = \"https://www.omdbapi.com?apikey=5fb20880\";\nexport function getMovies(movieName) {\n  var page, results, movies, res, i, mov, _i;\n\n  return _regeneratorRuntime.async(function getMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          page = 1;\n          results = [];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName + \"&page=\" + page));\n\n        case 4:\n          movies = _context.sent;\n          res = Number(movies.data.totalResults);\n          console.log(res);\n          i = 0;\n\n        case 8:\n          if (!(i <= res / 10)) {\n            _context.next = 16;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName + \"&page=\" + i));\n\n        case 11:\n          mov = _context.sent;\n          results += mov.data.Search;\n\n        case 13:\n          i++;\n          _context.next = 8;\n          break;\n\n        case 16:\n          for (_i = 0; _i < results.length; _i++) {\n            results[_i].forEach(function (result) {\n              return console.log(result);\n            });\n          }\n\n          return _context.abrupt(\"return\", results);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovieDetails(movieID) {\n  var movieDetails;\n  return _regeneratorRuntime.async(function getMovieDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&i=\" + movieID));\n\n        case 2:\n          movieDetails = _context2.sent;\n          return _context2.abrupt(\"return\", movieDetails);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/apis/api.js"],"names":["axios","BASE_URL_ENDPOINT","getMovies","movieName","page","results","get","movies","res","Number","data","totalResults","console","log","i","mov","Search","length","forEach","result","getMovieDetails","movieID","movieDetails"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAG,yCAA1B;AAEA,OAAQ,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFC,UAAAA,IADE,GACI,CADJ;AAEFC,UAAAA,OAFE,GAEO,EAFP;AAAA;AAAA,2CAGeL,KAAK,CAACM,GAAN,CAAaL,iBAAb,WAAoCE,SAApC,cAAsDC,IAAtD,CAHf;;AAAA;AAGAG,UAAAA,MAHA;AAIFC,UAAAA,GAJE,GAIIC,MAAM,CAACF,MAAM,CAACG,IAAP,CAAYC,YAAb,CAJV;AAKNC,UAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACQM,UAAAA,CANF,GAMI,CANJ;;AAAA;AAAA,gBAMOA,CAAC,IAAGN,GAAG,GAAC,EANf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAQcR,KAAK,CAACM,GAAN,CAAaL,iBAAb,WAAoCE,SAApC,cAAsDW,CAAtD,CARd;;AAAA;AAQEC,UAAAA,GARF;AASLV,UAAAA,OAAO,IAAEU,GAAG,CAACL,IAAJ,CAASM,MAAlB;;AATK;AAMmBF,UAAAA,CAAC,EANpB;AAAA;AAAA;;AAAA;AAYN,eAAQA,EAAR,GAAU,CAAV,EAAaA,EAAC,GAACT,OAAO,CAACY,MAAvB,EAA+BH,EAAC,EAAhC,EACA;AACAT,YAAAA,OAAO,CAACS,EAAD,CAAP,CAAWI,OAAX,CAAmB,UAACC,MAAD;AAAA,qBAAUP,OAAO,CAACC,GAAR,CAAYM,MAAZ,CAAV;AAAA,aAAnB;AACC;;AAfK,2CAgBCd,OAhBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBR,OAAQ,SAAee,eAAf,CAA+BC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACuBrB,KAAK,CAACM,GAAN,CAAaL,iBAAb,WAAoCoB,OAApC,CADvB;;AAAA;AACEC,UAAAA,YADF;AAAA,4CAEGA,YAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL_ENDPOINT = \"https://www.omdbapi.com?apikey=5fb20880\";\n\nexport  async function getMovies(movieName) {\n  let page =1;\n  let results= [];\n  const movies = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}&page=${page}`);\n  let res = Number(movies.data.totalResults);\n  console.log(res)\n  for(let i=0; i<= res/10; i++)\n  {\n    const mov = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}&page=${i}`);\n   results+=mov.data.Search;\n\n  }\n  for(let i=0; i<results.length; i++)\n  {\n  results[i].forEach((result)=>console.log(result));\n  }\n  return results;\n}\n\nexport  async function getMovieDetails(movieID) {\n    const movieDetails = await axios.get(`${BASE_URL_ENDPOINT}&i=${movieID}`);\n    return movieDetails;\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}