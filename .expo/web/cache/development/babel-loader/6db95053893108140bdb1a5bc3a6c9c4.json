{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport React from 'react';\nimport { getMovieDetails } from \"../apis/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MovieDetails = function MovieDetails(_ref) {\n  var route = _ref.route;\n  var item = route.params.item;\n\n  var _useState = useState({\n    results: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _getMovieDetails = getMovieDetails(item.imdbID),\n      data = _getMovieDetails.data;\n\n  var result = data;\n  setState(function (prevState) {\n    return _objectSpread(_objectSpread({}, prevState), {}, {\n      results: result\n    });\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Movie Description\"\n    }, item.imdbID), _jsxs(View, {\n      style: styles.modal,\n      children: [_jsx(Text, {\n        style: styles.modalText,\n        children: item.Title\n      }), _jsx(ImageBackground, {\n        style: {\n          height: 300,\n          width: '100%',\n          backgroundColor: '000'\n        },\n        resizeMode: \"conatin\",\n        source: item.Poster\n      }), state.results.map(function (result) {\n        _jsx(Text, {\n          children: result.Plot\n        });\n      })]\n    })]\n  });\n};\n\nexport default MovieDetails;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20,\n    color: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '700',\n    marginBottom: 5,\n    color: '#fff'\n  },\n  modal: {\n    padding: 20,\n    marginBottom: 20\n  },\n  modalText: {\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: '500',\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/screens/movie-details.js"],"names":["React","getMovieDetails","MovieDetails","route","item","params","useState","results","state","setState","imdbID","data","result","prevState","styles","container","title","modal","modalText","Title","height","width","backgroundColor","Poster","map","Plot","StyleSheet","create","flex","alignItems","justifyContent","paddingTop","paddingHorizontal","color","fontSize","fontWeight","marginBottom","padding"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT;;;;AAEA,IAAMC,YAAY,GAAC,SAAbA,YAAa,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC5B,MAAQC,IAAR,GAAiBD,KAAK,CAACE,MAAvB,CAAQD,IAAR;;AACA,kBAA0BE,QAAQ,CAAC;AAC/BC,IAAAA,OAAO,EAAC;AADuB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMI,yBAAiBR,eAAe,CAACG,IAAI,CAACM,MAAN,CAAhC;AAAA,MAAQC,IAAR,oBAAQA,IAAR;;AACA,MAAIC,MAAM,GAAGD,IAAb;AACAF,EAAAA,QAAQ,CAAC,UAAAI,SAAS,EAAI;AACpB,2CAAWA,SAAX;AAAsBN,MAAAA,OAAO,EAACK;AAA9B;AACD,GAFO,CAAR;AAKN,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAyB,MAAA,KAAK,EAAED,MAAM,CAACE,KAAvC;AAAA;AAAA,OAAWZ,IAAI,CAACM,MAAhB,CADF,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACG,KAApB;AAAA,iBACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA,kBAAgCd,IAAI,CAACe;AAArC,QADA,EAEA,KAAC,eAAD;AACA,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,GAAT;AAAcC,UAAAA,KAAK,EAAE,MAArB;AAA6BC,UAAAA,eAAe,EAAE;AAA9C,SADP;AAEA,QAAA,UAAU,EAAC,SAFX;AAGA,QAAA,MAAM,EAAElB,IAAI,CAACmB;AAHb,QAFA,EAOCf,KAAK,CAACD,OAAN,CAAciB,GAAd,CAAkB,UAAAZ,MAAM,EAAI;AAE7B,aAAC,IAAD;AAAA,oBAAOA,MAAM,CAACa;AAAd;AACC,OAHA,CAPD;AAAA,MAFJ;AAAA,IADF;AAiBD,CAhCD;;AAkCA,eAAevB,YAAf;AAGA,IAAMY,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETN,IAAAA,eAAe,EAAE,SAFR;AAGTO,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,YAJP;AAKTC,IAAAA,UAAU,EAAE,EALH;AAMTC,IAAAA,iBAAiB,EAAE,EANV;AAOTC,IAAAA,KAAK,EAAE;AAPE,GADoB;AAU/BjB,EAAAA,KAAK,EAAC;AACJkB,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAC,KAFP;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJH,IAAAA,KAAK,EAAE;AAJH,GAVyB;AAiB/BhB,EAAAA,KAAK,EAAC;AACJoB,IAAAA,OAAO,EAAC,EADJ;AAEJD,IAAAA,YAAY,EAAC;AAFT,GAjByB;AAqB/BlB,EAAAA,SAAS,EAAC;AACRgB,IAAAA,QAAQ,EAAE,EADF;AAERE,IAAAA,YAAY,EAAC,EAFL;AAGRD,IAAAA,UAAU,EAAE,KAHJ;AAIRF,IAAAA,KAAK,EAAE;AAJC;AArBqB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, ImageBackground} from 'react-native';\nimport React from 'react';\nimport { getMovieDetails } from '../apis/api';\n\nconst MovieDetails=({route }) =>{\n    const { item } = route.params;\n    const [state, setState] = useState({\n        results:[],\n      });\n\n\n\n        const { data } = getMovieDetails(item.imdbID);\n        let result = data;\n        setState(prevState => {\n          return {...prevState, results:result}\n        });\n    \n    \n  return (\n    <View style={styles.container}>\n      <Text key={item.imdbID}  style={styles.title}>Movie Description</Text>\n        <View style={styles.modal}>\n        <Text style={styles.modalText}>{item.Title}</Text>\n        <ImageBackground\n        style={{height: 300, width: '100%', backgroundColor: '000'}}\n        resizeMode='conatin'\n        source={item.Poster}\n        ></ImageBackground>\n        {state.results.map(result => {\n        \n        <Text>{result.Plot}</Text>\n        })}\n        </View>\n    </View>\n  );\n}\n\nexport default MovieDetails\n\n  \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20,\n    color: '#fff'\n  },\n  title:{\n    fontSize: 24,\n    fontWeight:'700',\n    marginBottom: 5,\n    color: '#fff'\n  },\n  \n  modal:{\n    padding:20,\n    marginBottom:20\n  },\n  modalText:{\n    fontSize: 24,\n    marginBottom:20,\n    fontWeight: '500',\n    color: '#fff'\n  }\n\n});\n\n\n"]},"metadata":{},"sourceType":"module"}