{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar BASE_URL_ENDPOINT = \"https://www.omdbapi.com?apikey=9c538846\";\nexport function getMovies(movieName) {\n  var results, movies, pages, i, res;\n  return _regeneratorRuntime.async(function getMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          results = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName + \"&page=1\"));\n\n        case 3:\n          movies = _context.sent;\n          pages = movies.data.totalResults;\n          i = 0;\n\n        case 6:\n          if (!(i < pages / 10)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName + \"&page=\" + i));\n\n        case 9:\n          res = _context.sent;\n          results.push(res.data.Search);\n\n        case 11:\n          i++;\n          _context.next = 6;\n          break;\n\n        case 14:\n          return _context.abrupt(\"return\", results);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovieDetails(movieID) {\n  var movieDetails;\n  return _regeneratorRuntime.async(function getMovieDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&i=\" + movieID));\n\n        case 2:\n          movieDetails = _context2.sent;\n          return _context2.abrupt(\"return\", movieDetails);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/apis/api.js"],"names":["axios","BASE_URL_ENDPOINT","getMovies","movieName","results","get","movies","pages","data","totalResults","i","res","push","Search","getMovieDetails","movieID","movieDetails"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAG,yCAA1B;AAEA,OAAQ,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,UAAAA,OADE,GACO,EADP;AAAA;AAAA,2CAEeJ,KAAK,CAACK,GAAN,CAAaJ,iBAAb,WAAoCE,SAApC,aAFf;;AAAA;AAEAG,UAAAA,MAFA;AAGFC,UAAAA,KAHE,GAGKD,MAAM,CAACE,IAAP,CAAYC,YAHjB;AAIEC,UAAAA,CAJF,GAII,CAJJ;;AAAA;AAAA,gBAIOA,CAAC,GAACH,KAAK,GAAC,EAJf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAKcP,KAAK,CAACK,GAAN,CAAaJ,iBAAb,WAAoCE,SAApC,cAAsDO,CAAtD,CALd;;AAAA;AAKEC,UAAAA,GALF;AAMJP,UAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAG,CAACH,IAAJ,CAASK,MAAtB;;AANI;AAImBH,UAAAA,CAAC,EAJpB;AAAA;AAAA;;AAAA;AAAA,2CAQCN,OARD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWR,OAAQ,SAAeU,eAAf,CAA+BC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACuBf,KAAK,CAACK,GAAN,CAAaJ,iBAAb,WAAoCc,OAApC,CADvB;;AAAA;AACEC,UAAAA,YADF;AAAA,4CAEGA,YAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL_ENDPOINT = \"https://www.omdbapi.com?apikey=9c538846\";\n\nexport  async function getMovies(movieName) {\n  let results =[];\n  const movies = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}&page=1`);\n  let pages= movies.data.totalResults;\n  for(let i=0; i<pages/10; i++){\n    const res = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}&page=${i}`);\n    results.push(res.data.Search)\n  }  \n  return results;\n}\n\nexport  async function getMovieDetails(movieID) {\n    const movieDetails = await axios.get(`${BASE_URL_ENDPOINT}&i=${movieID}`);\n    return movieDetails;\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}