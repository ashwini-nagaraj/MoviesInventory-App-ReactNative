{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar BASE_URL_ENDPOINT = \"https://www.omdbapi.com/?apikey=9c538846\";\nexport function getMovies(movieName) {\n  var movies;\n  return _regeneratorRuntime.async(function getMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&s=\" + movieName));\n\n        case 2:\n          movies = _context.sent;\n          return _context.abrupt(\"return\", movies);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovieDetails(movieID) {\n  var movieDetails;\n  return _regeneratorRuntime.async(function getMovieDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL_ENDPOINT + \"&i=\" + movieID));\n\n        case 2:\n          movieDetails = _context2.sent;\n          return _context2.abrupt(\"return\", movieDetails);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMovie(movieName) {\n  var movie_poster;\n  return _regeneratorRuntime.async(function getMovie$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          movie_poster = [];\n          fetch(BASE_URL_ENDPOINT + \"&s=\" + movieName).then(function (resp) {\n            return resp.json();\n          }).then(function (data) {\n            var num = data.Search.length;\n\n            for (var j = 0; j < num; j++) {\n              movie_poster.push(data.Search[j]);\n            }\n\n            return movie_poster;\n          });\n          return _context3.abrupt(\"return\", JSON.stringify(movie_poster));\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/ashwininagaraj/MoviesInventory/apis/api.js"],"names":["axios","BASE_URL_ENDPOINT","getMovies","movieName","get","movies","getMovieDetails","movieID","movieDetails","getMovie","movie_poster","fetch","then","resp","json","data","num","Search","length","j","push","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAG,yCAA1B;AAEA,OAAQ,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CAACI,GAAN,CAAaH,iBAAb,WAAoCE,SAApC,CADf;;AAAA;AACAE,UAAAA,MADA;AAAA,2CAECA,MAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKR,OAAQ,SAAeC,eAAf,CAA+BC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACuBP,KAAK,CAACI,GAAN,CAAaH,iBAAb,WAAoCM,OAApC,CADvB;;AAAA;AACEC,UAAAA,YADF;AAAA,4CAEGA,YAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKR,OAAQ,SAAeC,QAAf,CAAwBN,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACAO,UAAAA,YADA,GACe,EADf;AAENC,UAAAA,KAAK,CAAIV,iBAAJ,WAA2BE,SAA3B,CAAL,CAA6CS,IAA7C,CAAkD,UAASC,IAAT,EAAc;AAC5D,mBAAOA,IAAI,CAACC,IAAL,EAAP;AACH,WAFD,EAGCF,IAHD,CAGM,UAASG,IAAT,EAAc;AAChB,gBAAIC,GAAG,GAAGD,IAAI,CAACE,MAAL,CAAYC,MAAtB;;AACA,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGH,GAAjB,EAAsBG,CAAC,EAAvB,EAA0B;AAC1BT,cAAAA,YAAY,CAACU,IAAb,CAAkBL,IAAI,CAACE,MAAL,CAAYE,CAAZ,CAAlB;AACC;;AACD,mBAAOT,YAAP;AACH,WATD;AAFM,4CAYCW,IAAI,CAACC,SAAL,CAAeZ,YAAf,CAZD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL_ENDPOINT = \"https://www.omdbapi.com/?apikey=9c538846\";\n\nexport  async function getMovies(movieName) {\n  const movies = await axios.get(`${BASE_URL_ENDPOINT}&s=${movieName}`);\n  return movies;\n}\n\nexport  async function getMovieDetails(movieID) {\n    const movieDetails = await axios.get(`${BASE_URL_ENDPOINT}&i=${movieID}`);\n    return movieDetails;\n}\n\nexport  async function getMovie(movieName) {\n  const movie_poster = [];\n  fetch(`${BASE_URL_ENDPOINT}&s=${movieName}`).then(function(resp){\n      return resp.json()\n  })\n  .then(function(data){\n      var num = data.Search.length; \n      for(var j=0; j < num; j++){         \n      movie_poster.push(data.Search[j]);\n      }\n      return movie_poster;    \n  });\n  return JSON.stringify(movie_poster);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}